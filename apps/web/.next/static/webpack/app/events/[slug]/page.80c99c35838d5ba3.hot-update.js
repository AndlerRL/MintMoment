"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/events/[slug]/page",{

/***/ "(app-pages-browser)/./components/video-streamer.tsx":
/*!***************************************!*\
  !*** ./components/video-streamer.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VideoStreamer: function() { return /* binding */ VideoStreamer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_shared_video_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/shared/video-ui */ \"(app-pages-browser)/./components/shared/video-ui.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* __next_internal_client_entry_do_not_use__ VideoStreamer auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction VideoStreamer(param) {\n    let { eventData, onNewRecording } = param;\n    var _mediaSourceRef_current;\n    _s();\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isStreamStart, setIsStreamStart] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const socketRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const mediaSourceRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const sourceBufferRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const chunksQueue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (mediaSourceRef.current) return;\n        if (!window.MediaSource) {\n            setError(\"MediaSource API is not supported\");\n            return;\n        }\n        if (!MediaSource.isTypeSupported('video/webm; codecs=\"vp9,opus\"')) {\n            setError(\"WebM is not supported\");\n            return;\n        }\n        mediaSourceRef.current = new MediaSource();\n    }, []);\n    const initMediaSource = ()=>{\n        if (!mediaSourceRef.current) {\n            setError(\"MediaSource is not initialized\");\n            return;\n        }\n        if (videoRef.current) {\n            videoRef.current.src = URL.createObjectURL(mediaSourceRef.current);\n        }\n        const onSourceOpen = ()=>{\n            try {\n                if (!mediaSourceRef.current) {\n                    throw new Error(\"MediaSource is not initialized\");\n                }\n                sourceBufferRef.current = mediaSourceRef.current.addSourceBuffer('video/webm; codecs=\"vp9,opus\"');\n                sourceBufferRef.current.addEventListener(\"updateend\", appendNextChunk);\n                console.log(\"sourceBufferRef.current\", sourceBufferRef.current);\n            } catch (e) {\n                console.error(\"Error adding source buffer:\", e);\n                setError(\"Error adding source buffer\");\n            }\n        };\n        if (mediaSourceRef.current.readyState === \"open\") {\n            onSourceOpen();\n        } else {\n            mediaSourceRef.current.addEventListener(\"sourceopen\", onSourceOpen);\n        }\n        console.log(\"mediaSource.readyState\", mediaSourceRef.current.readyState);\n    };\n    const appendNextChunk = ()=>{\n        if (chunksQueue.current.length > 0 && sourceBufferRef.current && !sourceBufferRef.current.updating) {\n            const chunk = chunksQueue.current.shift();\n            try {\n                if (!chunk) throw new Error(\"Chunk is empty\");\n                sourceBufferRef.current.appendBuffer(chunk);\n                console.log(\"Appended chunk to source buffer:\", chunk);\n            } catch (e) {\n                console.error(\"Error appending buffer:\", e);\n            }\n        }\n    };\n    // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        socketRef.current = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_3__.io)();\n        socketRef.current.on(\"connect\", ()=>{\n            var _socketRef_current;\n            console.log(\"Viewer connected to Socket.IO server\");\n            (_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.emit(\"join-room\", eventData.id);\n        });\n        socketRef.current.on(\"start-stream\", ()=>{\n            console.log(\"Received start-stream event\");\n            setIsStreamStart(true);\n            const interval = setInterval(()=>{\n                if (mediaSourceRef.current && mediaSourceRef.current.readyState !== \"open\") {\n                    initMediaSource();\n                } else {\n                    clearInterval(interval);\n                }\n            }, 140);\n        });\n        socketRef.current.on(\"end-stream\", ()=>{\n            console.log(\"Received end-stream event\");\n            setIsStreamStart(false);\n            if (videoRef.current) {\n                videoRef.current.src = \"\";\n            }\n            if (mediaSourceRef.current && mediaSourceRef.current.readyState === \"open\") {\n                mediaSourceRef.current.endOfStream();\n            }\n        });\n        socketRef.current.on(\"stream-chunk\", (chunk)=>{\n            console.log(\"Received stream chunk\", chunk);\n            const uint8Array = new Uint8Array(chunk);\n            console.log(\"Received chunk data:\", uint8Array);\n            chunksQueue.current.push(uint8Array);\n            if (sourceBufferRef.current && !sourceBufferRef.current.updating) {\n                appendNextChunk();\n            }\n        });\n        return ()=>{\n            var _socketRef_current;\n            if (mediaSourceRef.current && mediaSourceRef.current.readyState === \"open\") {\n                mediaSourceRef.current.endOfStream();\n            }\n            (_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.disconnect();\n        };\n    }, [\n        eventData.id,\n        (_mediaSourceRef_current = mediaSourceRef.current) === null || _mediaSourceRef_current === void 0 ? void 0 : _mediaSourceRef_current.readyState\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_video_ui__WEBPACK_IMPORTED_MODULE_1__.VideoUI, {\n        error: error,\n        eventData: eventData,\n        streamerVideoRef: videoRef,\n        isStreamStart: isStreamStart,\n        onNewRecording: onNewRecording,\n        onOpenAvatar: ()=>console.log(\"Open Avatar\"),\n        onOpenChat: ()=>console.log(\"Open Chat\"),\n        onShareAction: ()=>console.log(\"Share Action\"),\n        onLikeAction: ()=>console.log(\"Like Action\"),\n        onToggleAiNarrator: ()=>console.log(\"Toggle AI Narrator\")\n    }, void 0, false, {\n        fileName: \"/home/andler/Development/nextjs/stream-u-media/components/video-streamer.tsx\",\n        lineNumber: 152,\n        columnNumber: 5\n    }, this);\n}\n_s(VideoStreamer, \"MWNJ6Hv5WSOOIAxXcPtBBLiBvL8=\");\n_c = VideoStreamer;\nvar _c;\n$RefreshReg$(_c, \"VideoStreamer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdmlkZW8tc3RyZWFtZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRXVEO0FBRUg7QUFDRDtBQU81QyxTQUFTSyxjQUFjLEtBR1Q7UUFIUyxFQUM1QkMsU0FBUyxFQUNUQyxjQUFjLEVBQ0ssR0FIUztRQXdJVkM7O0lBcElsQixNQUFNLENBQUNDLE9BQU9DLFNBQVMsR0FBR1AsK0NBQVFBLENBQWdCO0lBQ2xELE1BQU0sQ0FBQ1EsZUFBZUMsaUJBQWlCLEdBQUdULCtDQUFRQSxDQUFDO0lBQ25ELE1BQU1VLFdBQVdYLDZDQUFNQSxDQUFtQjtJQUMxQyxNQUFNWSxZQUFZWiw2Q0FBTUEsQ0FBZ0I7SUFDeEMsTUFBTU0saUJBQWlCTiw2Q0FBTUEsQ0FBcUI7SUFDbEQsTUFBTWEsa0JBQWtCYiw2Q0FBTUEsQ0FBc0I7SUFDcEQsTUFBTWMsY0FBY2QsNkNBQU1BLENBQWUsRUFBRTtJQUUzQ0QsZ0RBQVNBLENBQUM7UUFDUixJQUFJTyxlQUFlUyxPQUFPLEVBQUU7UUFDNUIsSUFBSSxDQUFDQyxPQUFPQyxXQUFXLEVBQUU7WUFDdkJULFNBQVM7WUFDVDtRQUNGO1FBQ0EsSUFBSSxDQUFDUyxZQUFZQyxlQUFlLENBQUMsa0NBQWtDO1lBQ2pFVixTQUFTO1lBQ1Q7UUFDRjtRQUNBRixlQUFlUyxPQUFPLEdBQUcsSUFBSUU7SUFDL0IsR0FBRyxFQUFFO0lBRUwsTUFBTUUsa0JBQWtCO1FBQ3RCLElBQUksQ0FBQ2IsZUFBZVMsT0FBTyxFQUFFO1lBQzNCUCxTQUFTO1lBQ1Q7UUFDRjtRQUVBLElBQUlHLFNBQVNJLE9BQU8sRUFBRTtZQUNwQkosU0FBU0ksT0FBTyxDQUFDSyxHQUFHLEdBQUdDLElBQUlDLGVBQWUsQ0FBQ2hCLGVBQWVTLE9BQU87UUFDbkU7UUFDQSxNQUFNUSxlQUFlO1lBQ25CLElBQUk7Z0JBQ0YsSUFBSSxDQUFDakIsZUFBZVMsT0FBTyxFQUFFO29CQUMzQixNQUFNLElBQUlTLE1BQU07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QU8sQ0FBQzRCLFdBQVc7WUFDcEM7YUFDQS9CLHFCQUFBQSxVQUFVRyxPQUFPLGNBQWpCSCx5Q0FBQUEsbUJBQW1CbUMsVUFBVTtRQUMvQjtJQUNGLEdBQUc7UUFBQzNDLFVBQVVtQyxFQUFFO1NBQUVqQywwQkFBQUEsZUFBZVMsT0FBTyxjQUF0QlQsOENBQUFBLHdCQUF3QnlCLFVBQVU7S0FBQztJQUVyRCxxQkFDRSw4REFBQ2pDLGdFQUFPQTtRQUNOUyxPQUFPQTtRQUNQSCxXQUFXQTtRQUNYNEMsa0JBQWtCckM7UUFDbEJGLGVBQWVBO1FBQ2ZKLGdCQUFnQkE7UUFDaEI0QyxjQUFjLElBQU1yQixRQUFRQyxHQUFHLENBQUM7UUFDaENxQixZQUFZLElBQU10QixRQUFRQyxHQUFHLENBQUM7UUFDOUJzQixlQUFlLElBQU12QixRQUFRQyxHQUFHLENBQUM7UUFDakN1QixjQUFjLElBQU14QixRQUFRQyxHQUFHLENBQUM7UUFDaEN3QixvQkFBb0IsSUFBTXpCLFFBQVFDLEdBQUcsQ0FBQzs7Ozs7O0FBRzVDO0dBeEpnQjFCO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvdmlkZW8tc3RyZWFtZXIudHN4P2JhYmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG5pbXBvcnQgeyBWaWRlb1VJIH0gZnJvbSBcIkAvY29tcG9uZW50cy9zaGFyZWQvdmlkZW8tdWlcIjtcclxuaW1wb3J0IHR5cGUgeyBUYWJsZXMgfSBmcm9tIFwiQC9zdXBhYmFzZS9kYXRhYmFzZS50eXBlc1wiO1xyXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdHlwZSBTb2NrZXQsIGlvIH0gZnJvbSBcInNvY2tldC5pby1jbGllbnRcIjtcclxuXHJcbmludGVyZmFjZSBWaWRlb1N0cmVhbWVyUHJvcHMge1xyXG4gIGV2ZW50RGF0YTogVGFibGVzPFwiZXZlbnRzXCI+O1xyXG4gIG9uTmV3UmVjb3JkaW5nOiAoKSA9PiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gVmlkZW9TdHJlYW1lcih7XHJcbiAgZXZlbnREYXRhLFxyXG4gIG9uTmV3UmVjb3JkaW5nLFxyXG59OiBWaWRlb1N0cmVhbWVyUHJvcHMpIHtcclxuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xyXG4gIGNvbnN0IFtpc1N0cmVhbVN0YXJ0LCBzZXRJc1N0cmVhbVN0YXJ0XSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCB2aWRlb1JlZiA9IHVzZVJlZjxIVE1MVmlkZW9FbGVtZW50PihudWxsKTtcclxuICBjb25zdCBzb2NrZXRSZWYgPSB1c2VSZWY8U29ja2V0IHwgbnVsbD4obnVsbCk7XHJcbiAgY29uc3QgbWVkaWFTb3VyY2VSZWYgPSB1c2VSZWY8TWVkaWFTb3VyY2UgfCBudWxsPihudWxsKTtcclxuICBjb25zdCBzb3VyY2VCdWZmZXJSZWYgPSB1c2VSZWY8U291cmNlQnVmZmVyIHwgbnVsbD4obnVsbCk7XHJcbiAgY29uc3QgY2h1bmtzUXVldWUgPSB1c2VSZWY8VWludDhBcnJheVtdPihbXSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAobWVkaWFTb3VyY2VSZWYuY3VycmVudCkgcmV0dXJuO1xyXG4gICAgaWYgKCF3aW5kb3cuTWVkaWFTb3VyY2UpIHtcclxuICAgICAgc2V0RXJyb3IoXCJNZWRpYVNvdXJjZSBBUEkgaXMgbm90IHN1cHBvcnRlZFwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCFNZWRpYVNvdXJjZS5pc1R5cGVTdXBwb3J0ZWQoJ3ZpZGVvL3dlYm07IGNvZGVjcz1cInZwOSxvcHVzXCInKSkge1xyXG4gICAgICBzZXRFcnJvcihcIldlYk0gaXMgbm90IHN1cHBvcnRlZFwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgbWVkaWFTb3VyY2VSZWYuY3VycmVudCA9IG5ldyBNZWRpYVNvdXJjZSgpO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3QgaW5pdE1lZGlhU291cmNlID0gKCkgPT4ge1xyXG4gICAgaWYgKCFtZWRpYVNvdXJjZVJlZi5jdXJyZW50KSB7XHJcbiAgICAgIHNldEVycm9yKFwiTWVkaWFTb3VyY2UgaXMgbm90IGluaXRpYWxpemVkXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9O1xyXG5cclxuICAgIGlmICh2aWRlb1JlZi5jdXJyZW50KSB7XHJcbiAgICAgIHZpZGVvUmVmLmN1cnJlbnQuc3JjID0gVVJMLmNyZWF0ZU9iamVjdFVSTChtZWRpYVNvdXJjZVJlZi5jdXJyZW50KTtcclxuICAgIH1cclxuICAgIGNvbnN0IG9uU291cmNlT3BlbiA9ICgpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBpZiAoIW1lZGlhU291cmNlUmVmLmN1cnJlbnQpIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1lZGlhU291cmNlIGlzIG5vdCBpbml0aWFsaXplZFwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNvdXJjZUJ1ZmZlclJlZi5jdXJyZW50ID0gbWVkaWFTb3VyY2VSZWYuY3VycmVudC5hZGRTb3VyY2VCdWZmZXIoXHJcbiAgICAgICAgICAndmlkZW8vd2VibTsgY29kZWNzPVwidnA5LG9wdXNcIidcclxuICAgICAgICApO1xyXG4gICAgICAgIHNvdXJjZUJ1ZmZlclJlZi5jdXJyZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ1cGRhdGVlbmRcIiwgYXBwZW5kTmV4dENodW5rKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcInNvdXJjZUJ1ZmZlclJlZi5jdXJyZW50XCIsIHNvdXJjZUJ1ZmZlclJlZi5jdXJyZW50KTtcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBhZGRpbmcgc291cmNlIGJ1ZmZlcjpcIiwgZSk7XHJcbiAgICAgICAgc2V0RXJyb3IoXCJFcnJvciBhZGRpbmcgc291cmNlIGJ1ZmZlclwiKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAobWVkaWFTb3VyY2VSZWYuY3VycmVudC5yZWFkeVN0YXRlID09PSBcIm9wZW5cIikge1xyXG4gICAgICBvblNvdXJjZU9wZW4oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG1lZGlhU291cmNlUmVmLmN1cnJlbnQuYWRkRXZlbnRMaXN0ZW5lcihcInNvdXJjZW9wZW5cIiwgb25Tb3VyY2VPcGVuKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zb2xlLmxvZygnbWVkaWFTb3VyY2UucmVhZHlTdGF0ZScsIG1lZGlhU291cmNlUmVmLmN1cnJlbnQucmVhZHlTdGF0ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgYXBwZW5kTmV4dENodW5rID0gKCkgPT4ge1xyXG4gICAgaWYgKFxyXG4gICAgICBjaHVua3NRdWV1ZS5jdXJyZW50Lmxlbmd0aCA+IDAgJiZcclxuICAgICAgc291cmNlQnVmZmVyUmVmLmN1cnJlbnQgJiZcclxuICAgICAgIXNvdXJjZUJ1ZmZlclJlZi5jdXJyZW50LnVwZGF0aW5nXHJcbiAgICApIHtcclxuICAgICAgY29uc3QgY2h1bmsgPSBjaHVua3NRdWV1ZS5jdXJyZW50LnNoaWZ0KCk7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgaWYgKCFjaHVuaykgdGhyb3cgbmV3IEVycm9yKFwiQ2h1bmsgaXMgZW1wdHlcIik7XHJcblxyXG4gICAgICAgIHNvdXJjZUJ1ZmZlclJlZi5jdXJyZW50LmFwcGVuZEJ1ZmZlcihjaHVuayk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJBcHBlbmRlZCBjaHVuayB0byBzb3VyY2UgYnVmZmVyOlwiLCBjaHVuayk7XHJcbiAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYXBwZW5kaW5nIGJ1ZmZlcjpcIiwgZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9O1xyXG5cclxuICAvLyBiaW9tZS1pZ25vcmUgbGludC9jb3JyZWN0bmVzcy91c2VFeGhhdXN0aXZlRGVwZW5kZW5jaWVzOiA8ZXhwbGFuYXRpb24+XHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHNvY2tldFJlZi5jdXJyZW50ID0gaW8oKTtcclxuXHJcbiAgICBzb2NrZXRSZWYuY3VycmVudC5vbihcImNvbm5lY3RcIiwgKCkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIlZpZXdlciBjb25uZWN0ZWQgdG8gU29ja2V0LklPIHNlcnZlclwiKTtcclxuICAgICAgc29ja2V0UmVmLmN1cnJlbnQ/LmVtaXQoXCJqb2luLXJvb21cIiwgZXZlbnREYXRhLmlkKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHNvY2tldFJlZi5jdXJyZW50Lm9uKFwic3RhcnQtc3RyZWFtXCIsICgpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coXCJSZWNlaXZlZCBzdGFydC1zdHJlYW0gZXZlbnRcIik7XHJcbiAgICAgIHNldElzU3RyZWFtU3RhcnQodHJ1ZSk7XHJcblxyXG4gICAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICBpZiAobWVkaWFTb3VyY2VSZWYuY3VycmVudCAmJiBtZWRpYVNvdXJjZVJlZi5jdXJyZW50LnJlYWR5U3RhdGUgIT09IFwib3BlblwiKSB7XHJcbiAgICAgICAgICBpbml0TWVkaWFTb3VyY2UoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCAxNDApO1xyXG5cclxuICAgIH0pO1xyXG5cclxuICAgIHNvY2tldFJlZi5jdXJyZW50Lm9uKFwiZW5kLXN0cmVhbVwiLCAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiUmVjZWl2ZWQgZW5kLXN0cmVhbSBldmVudFwiKTtcclxuICAgICAgc2V0SXNTdHJlYW1TdGFydChmYWxzZSk7XHJcbiAgICAgIGlmICh2aWRlb1JlZi5jdXJyZW50KSB7XHJcbiAgICAgICAgdmlkZW9SZWYuY3VycmVudC5zcmMgPSBcIlwiO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChcclxuICAgICAgICBtZWRpYVNvdXJjZVJlZi5jdXJyZW50ICYmXHJcbiAgICAgICAgbWVkaWFTb3VyY2VSZWYuY3VycmVudC5yZWFkeVN0YXRlID09PSBcIm9wZW5cIlxyXG4gICAgICApIHtcclxuICAgICAgICBtZWRpYVNvdXJjZVJlZi5jdXJyZW50LmVuZE9mU3RyZWFtKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHNvY2tldFJlZi5jdXJyZW50Lm9uKFwic3RyZWFtLWNodW5rXCIsIChjaHVuazogQXJyYXlCdWZmZXIpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coXCJSZWNlaXZlZCBzdHJlYW0gY2h1bmtcIiwgY2h1bmspO1xyXG4gICAgICBjb25zdCB1aW50OEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoY2h1bmspO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIlJlY2VpdmVkIGNodW5rIGRhdGE6XCIsIHVpbnQ4QXJyYXkpO1xyXG5cclxuICAgICAgY2h1bmtzUXVldWUuY3VycmVudC5wdXNoKHVpbnQ4QXJyYXkpO1xyXG5cclxuICAgICAgaWYgKHNvdXJjZUJ1ZmZlclJlZi5jdXJyZW50ICYmICFzb3VyY2VCdWZmZXJSZWYuY3VycmVudC51cGRhdGluZykge1xyXG4gICAgICAgIGFwcGVuZE5leHRDaHVuaygpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgbWVkaWFTb3VyY2VSZWYuY3VycmVudCAmJlxyXG4gICAgICAgIG1lZGlhU291cmNlUmVmLmN1cnJlbnQucmVhZHlTdGF0ZSA9PT0gXCJvcGVuXCJcclxuICAgICAgKSB7XHJcbiAgICAgICAgbWVkaWFTb3VyY2VSZWYuY3VycmVudC5lbmRPZlN0cmVhbSgpO1xyXG4gICAgICB9XHJcbiAgICAgIHNvY2tldFJlZi5jdXJyZW50Py5kaXNjb25uZWN0KCk7XHJcbiAgICB9O1xyXG4gIH0sIFtldmVudERhdGEuaWQsIG1lZGlhU291cmNlUmVmLmN1cnJlbnQ/LnJlYWR5U3RhdGVdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxWaWRlb1VJXHJcbiAgICAgIGVycm9yPXtlcnJvcn1cclxuICAgICAgZXZlbnREYXRhPXtldmVudERhdGF9XHJcbiAgICAgIHN0cmVhbWVyVmlkZW9SZWY9e3ZpZGVvUmVmfVxyXG4gICAgICBpc1N0cmVhbVN0YXJ0PXtpc1N0cmVhbVN0YXJ0fVxyXG4gICAgICBvbk5ld1JlY29yZGluZz17b25OZXdSZWNvcmRpbmd9XHJcbiAgICAgIG9uT3BlbkF2YXRhcj17KCkgPT4gY29uc29sZS5sb2coXCJPcGVuIEF2YXRhclwiKX1cclxuICAgICAgb25PcGVuQ2hhdD17KCkgPT4gY29uc29sZS5sb2coXCJPcGVuIENoYXRcIil9XHJcbiAgICAgIG9uU2hhcmVBY3Rpb249eygpID0+IGNvbnNvbGUubG9nKFwiU2hhcmUgQWN0aW9uXCIpfVxyXG4gICAgICBvbkxpa2VBY3Rpb249eygpID0+IGNvbnNvbGUubG9nKFwiTGlrZSBBY3Rpb25cIil9XHJcbiAgICAgIG9uVG9nZ2xlQWlOYXJyYXRvcj17KCkgPT4gY29uc29sZS5sb2coXCJUb2dnbGUgQUkgTmFycmF0b3JcIil9XHJcbiAgICAvPlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbIlZpZGVvVUkiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsImlvIiwiVmlkZW9TdHJlYW1lciIsImV2ZW50RGF0YSIsIm9uTmV3UmVjb3JkaW5nIiwibWVkaWFTb3VyY2VSZWYiLCJlcnJvciIsInNldEVycm9yIiwiaXNTdHJlYW1TdGFydCIsInNldElzU3RyZWFtU3RhcnQiLCJ2aWRlb1JlZiIsInNvY2tldFJlZiIsInNvdXJjZUJ1ZmZlclJlZiIsImNodW5rc1F1ZXVlIiwiY3VycmVudCIsIndpbmRvdyIsIk1lZGlhU291cmNlIiwiaXNUeXBlU3VwcG9ydGVkIiwiaW5pdE1lZGlhU291cmNlIiwic3JjIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwib25Tb3VyY2VPcGVuIiwiRXJyb3IiLCJhZGRTb3VyY2VCdWZmZXIiLCJhZGRFdmVudExpc3RlbmVyIiwiYXBwZW5kTmV4dENodW5rIiwiY29uc29sZSIsImxvZyIsImUiLCJyZWFkeVN0YXRlIiwibGVuZ3RoIiwidXBkYXRpbmciLCJjaHVuayIsInNoaWZ0IiwiYXBwZW5kQnVmZmVyIiwib24iLCJlbWl0IiwiaWQiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsImVuZE9mU3RyZWFtIiwidWludDhBcnJheSIsIlVpbnQ4QXJyYXkiLCJwdXNoIiwiZGlzY29ubmVjdCIsInN0cmVhbWVyVmlkZW9SZWYiLCJvbk9wZW5BdmF0YXIiLCJvbk9wZW5DaGF0Iiwib25TaGFyZUFjdGlvbiIsIm9uTGlrZUFjdGlvbiIsIm9uVG9nZ2xlQWlOYXJyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/video-streamer.tsx\n"));

/***/ })

});