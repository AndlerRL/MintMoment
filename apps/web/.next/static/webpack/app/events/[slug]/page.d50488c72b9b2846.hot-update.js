"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/events/[slug]/page",{

/***/ "(app-pages-browser)/./components/video-streamer.tsx":
/*!***************************************!*\
  !*** ./components/video-streamer.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VideoStreamer: function() { return /* binding */ VideoStreamer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_shared_video_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/shared/video-ui */ \"(app-pages-browser)/./components/shared/video-ui.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* __next_internal_client_entry_do_not_use__ VideoStreamer auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction VideoStreamer(param) {\n    let { eventData, activeStreams, onNewRecording } = param;\n    _s();\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isStreamStart, setIsStreamStart] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const socketRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const mediaSourceRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const sourceBufferRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const chunksQueue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (mediaSourceRef.current) return;\n        if (!window.MediaSource) {\n            setError(\"MediaSource API is not supported\");\n            return;\n        }\n        if (!MediaSource.isTypeSupported('video/webm; codecs=\"vp9,opus\"')) {\n            setError(\"WebM is not supported\");\n            return;\n        }\n        mediaSourceRef.current = new MediaSource();\n    }, []);\n    const initMediaSource = ()=>{\n        if (!mediaSourceRef.current) {\n            setError(\"MediaSource is not initialized\");\n            return;\n        }\n        if (videoRef.current) {\n            videoRef.current.src = URL.createObjectURL(mediaSourceRef.current);\n            videoRef.current.play();\n            videoRef.current.muted = false;\n            videoRef.current.controls = false;\n        }\n        const onSourceOpen = ()=>{\n            try {\n                if (!mediaSourceRef.current) {\n                    throw new Error(\"MediaSource is not initialized\");\n                }\n                sourceBufferRef.current = mediaSourceRef.current.addSourceBuffer('video/webm; codecs=\"vp9,opus\"');\n                sourceBufferRef.current.addEventListener(\"updateend\", appendNextChunk);\n                console.log(\"sourceBufferRef.current\", sourceBufferRef.current);\n            } catch (e) {\n                console.error(\"Error adding source buffer:\", e);\n                setError(\"Error adding source buffer\");\n            }\n        };\n        if (mediaSourceRef.current.readyState === \"open\") {\n            onSourceOpen();\n        } else {\n            mediaSourceRef.current.addEventListener(\"sourceopen\", onSourceOpen);\n        }\n        console.log(\"mediaSource.readyState\", mediaSourceRef.current.readyState);\n    };\n    const appendNextChunk = ()=>{\n        if (chunksQueue.current.length > 0 && sourceBufferRef.current && !sourceBufferRef.current.updating && mediaSourceRef.current && mediaSourceRef.current.readyState === \"open\") {\n            const chunk = chunksQueue.current.shift();\n            try {\n                if (!chunk) throw new Error(\"Chunk is empty\");\n                sourceBufferRef.current.appendBuffer(chunk);\n                console.log(\"Appended chunk to source buffer: \", chunk);\n            } catch (e) {\n                console.error(\"Error appending buffer:\", e);\n            }\n        }\n    };\n    const [currentStreamId, setCurrentStreamId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (activeStreams.length > 0 && !currentStreamId) {\n            setCurrentStreamId(activeStreams[0].id);\n        }\n    }, [\n        activeStreams,\n        currentStreamId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        socketRef.current = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_3__.io)();\n        socketRef.current.on(\"connect\", ()=>{\n            var _socketRef_current;\n            console.log(\"Viewer connected to Socket.IO server\");\n            (_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.emit(\"join-room\", eventData.id);\n        });\n        socketRef.current.on(\"start-stream\", (param)=>{\n            let { streamId } = param;\n            console.log(\"Received start-stream event for stream:\", streamId);\n            if (!currentStreamId) {\n                setCurrentStreamId(streamId);\n            }\n        // You might want to show a notification that a new stream has started\n        });\n        socketRef.current.on(\"end-stream\", (param)=>{\n            let { streamId } = param;\n            console.log(\"Received end-stream event for stream:\", streamId);\n            if (currentStreamId === streamId) {\n                setCurrentStreamId(null);\n            }\n        // You might want to show a notification that a stream has ended\n        });\n        socketRef.current.on(\"stream-chunk\", (chunk)=>{\n            const uint8Array = new Uint8Array(chunk);\n            chunksQueue.current.push(uint8Array);\n            if (sourceBufferRef.current && !sourceBufferRef.current.updating) {\n                appendNextChunk();\n            }\n        });\n        return ()=>{\n            var _socketRef_current;\n            if (mediaSourceRef.current && mediaSourceRef.current.readyState === \"open\") {\n                mediaSourceRef.current.endOfStream();\n            }\n            (_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.disconnect();\n        };\n    }, [\n        eventData.id,\n        currentStreamId\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_video_ui__WEBPACK_IMPORTED_MODULE_1__.VideoUI, {\n                error: error,\n                eventData: eventData,\n                streamerVideoRef: videoRef,\n                isStreamStart: Boolean(currentStreamId),\n                onNewRecording: onNewRecording,\n                onOpenAvatar: ()=>console.log(\"Open Avatar\"),\n                onOpenChat: ()=>console.log(\"Open Chat\"),\n                onShareAction: ()=>console.log(\"Share Action\"),\n                onLikeAction: ()=>console.log(\"Like Action\"),\n                onToggleAiNarrator: ()=>console.log(\"Toggle AI Narrator\")\n            }, void 0, false, {\n                fileName: \"/home/andler/Development/nextjs/stream-u-media/components/video-streamer.tsx\",\n                lineNumber: 153,\n                columnNumber: 7\n            }, this),\n            activeStreams.length > 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        children: \"Active Streams:\"\n                    }, void 0, false, {\n                        fileName: \"/home/andler/Development/nextjs/stream-u-media/components/video-streamer.tsx\",\n                        lineNumber: 167,\n                        columnNumber: 11\n                    }, this),\n                    activeStreams.map((stream)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setCurrentStreamId(stream.id),\n                            className: currentStreamId === stream.id ? \"active\" : \"\",\n                            children: [\n                                stream.user_id,\n                                \"'s Stream\"\n                            ]\n                        }, stream.id, true, {\n                            fileName: \"/home/andler/Development/nextjs/stream-u-media/components/video-streamer.tsx\",\n                            lineNumber: 169,\n                            columnNumber: 13\n                        }, this))\n                ]\n            }, void 0, true, {\n                fileName: \"/home/andler/Development/nextjs/stream-u-media/components/video-streamer.tsx\",\n                lineNumber: 166,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(VideoStreamer, \"ToYmCtTto0idM3OEP2WtflXHgo4=\");\n_c = VideoStreamer;\nvar _c;\n$RefreshReg$(_c, \"VideoStreamer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/video-streamer.tsx\n"));

/***/ })

});